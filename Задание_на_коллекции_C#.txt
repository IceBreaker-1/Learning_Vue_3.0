using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Security.Cryptography.X509Certificates;
using System.Text;
using System.Threading.Tasks;


namespace Homework
{
    internal class Program
    {
        static void Main(string[] args)
        {
            var a = new collections();
            Console.WriteLine("Работа с ArrayList");
            a.arrayListAdd();
            a.arrayListRemove();
            a.arrayListGet();
            a.arrayListCount();

            var b = new collections_full();
            Console.WriteLine("\nРабота с List");
            b.arrayListAdd();
            b.arrayListRemove();
            b.arrayListGet();
            b.arrayListCount();

            Console.WriteLine("\nРабота с Queue");
            b.queueAdd();
            b.queueRemove();
            b.queueGet();
            b.queueCount();

            Console.WriteLine("\nРабота с Stack");
            b.stackAdd();
            b.stackRemove();
            b.stackGet();
            b.stackCount();
            
        } 
    }


    class collections_full : collections
    {
        public virtual void arrayListAdd()
        {
            Console.Write("Введите количество элементов в List: ");
            var count = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("Заполнение List");
            for (int i = 0; i < count; i++)
            {
                b.Add(Console.ReadLine());
            }
            Console.WriteLine("Получившийся List:");
            for (int i = 0; i < b.Count; i++)
            {
                Console.WriteLine(b[i]);
            }
        }


        public virtual void arrayListRemove()
        {
            Console.Write("Введите индекс элемента List, который необходимо удалить: ");
            var index = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine($"Был удалён элемент '{b[index]}'");
            b.RemoveAt(index);
        }

        public virtual void arrayListGet()
        {
            Console.Write("Введите индекс элемента List, который необходимо вывести: ");
            var index = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine(b[index]);
        }

        public virtual void arrayListCount()
        {
            Console.WriteLine($"Количество элементов в List: {b.Count}");
        }
    }



    class collections
    {
        public ArrayList a = new ArrayList();
        public List<String> b = new List<string>();
        public Queue<int> c = new Queue<int>();
        public Stack<double> d = new Stack<double>();

        public void arrayListAdd()
        {
            Console.Write("Введите количество элементов в ArrayList: ");
            var count = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("Заполнение ArrayList");
            for (int i = 0; i < count; i++)
            {
                a.Add(Console.ReadLine());
            }
            Console.WriteLine("Получившийся ArrayList:");
            for (int i = 0; i < a.Count; i++)
            {
                Console.WriteLine(a[i]);
            }
        }


        public void arrayListRemove()
        {
            Console.Write("Введите индекс элемента ArrayList, который необходимо удалить: ");
            var index = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine($"Был удалён элемент '{a[index]}'");
            a.RemoveAt(index);
        }

        public void arrayListGet()
        {
            Console.Write("Введите индекс элемента ArraList, который необходимо вывести: ");
            var index = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine(a[index]);
        }

        public void arrayListCount()
        {
            Console.WriteLine($"Количество элементов в ArrayList: {a.Count}");
        }

        public void queueAdd()
        {
            Console.Write("Введите количество элементов в Queue: ");
            var count = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("Заполнение Queue: ");
            for (int i = 0; i < count; i++)
            {
                c.Enqueue(Convert.ToInt32(Console.ReadLine()));
            }
            Console.WriteLine("Получившийся Queue:");
            foreach (var t in c)
            {
                Console.WriteLine(t);
            }
        }

        public void queueRemove()
        {
            Console.WriteLine($"Удаление первого элемента Queue: {c.Peek()}");
            c.Dequeue();
            Console.WriteLine("Содержание Queue после удаления:");
            foreach (var t in c)
            {
                Console.WriteLine(t);
            }   
        }

        public void queueGet()
        {
            Console.WriteLine($"Получение первого элемента Queue: {c.Peek()}");
        }

        public void queueCount()
        {
            Console.WriteLine($"Количество элементов в queue: {c.Count}");
        }

        public void stackAdd()
        {
            Console.Write("Введите количество элементов Stack: ");
            var count = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("Заполнение Stack:");
            for (int i = 0; i < count; i++)
            {
                d.Push(Convert.ToDouble(Console.ReadLine()));
            }
            Console.WriteLine("Вывод получившегося стэка: ");
            foreach (var t in d)
            {
                Console.WriteLine(t);
            }
        }

        public void stackRemove()
        {
            Console.WriteLine($"Удаление первого элемента стэка: {d.Pop()}");
            Console.WriteLine("Содержание Stack после удаления:");
            foreach (var t in d)
            {
                Console.WriteLine(t);
            }
        }

        public void stackGet()
        {
            Console.WriteLine($"Получение первого элемента стэка: {d.Peek()}");
        }

        public void stackCount()
        {
            Console.WriteLine($"Количество элементов в стэке: {d.Count}");
        }
    }
}
